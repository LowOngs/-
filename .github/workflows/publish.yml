name: Publish Blog (Blogger)

"on":
  workflow_dispatch:
  push:
    branches: [ google-blog ]
    paths:
      - "content/posts/**"
      - "assets/images/**"
      - "templates/**"
      - "scripts/**"
      - "package.json"
      - "package-lock.json"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      # R2 / CDN
      R2_ACCOUNT_ID:         ${{ secrets.R2_ACCOUNT_ID }}
      R2_ACCESS_KEY_ID:      ${{ secrets.R2_ACCESS_KEY_ID }}
      R2_SECRET_ACCESS_KEY:  ${{ secrets.R2_SECRET_ACCESS_KEY }}
      R2_BUCKET:             ${{ secrets.R2_BUCKET }}
      R2_ENDPOINT:           ${{ secrets.R2_ENDPOINT }}
      CDN_BASE:              ${{ secrets.CDN_BASE }}
      IMAGES_DIR:            assets/images
      POSTS_DIR:             content/posts
      # Blogger / Google
      BLOGGER_BLOG_ID:       ${{ secrets.BLOGGER_BLOG_ID }}
      GOOGLE_OAUTH_TOKEN:    ${{ secrets.GOOGLE_OAUTH_TOKEN }}   # 없어도 됨
      GOOGLE_CLIENT_ID:      ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET:  ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REFRESH_TOKEN:  ${{ secrets.GOOGLE_REFRESH_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Upload images to R2
        run: npm run images:upload

      - name: Rewrite image URLs in posts
        run: npm run images:rewrite

      # ⬇ 렌더 단계 필수
      - name: Render posts
        run: npm run posts:render

      - name: List rendered outputs
        run: ls -la System_files/dist/posts || true

      # ⬇ 토큰/블로그 접근 진단(문제시 실패 지점이 명확해집니다)
      - name: Token refresh check
        env:
          C_ID:     ${{ secrets.GOOGLE_CLIENT_ID }}
          C_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          R_TOKEN:  ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        run: |
          echo "Refreshing access token…"
          RESP=$(curl -s -X POST https://oauth2.googleapis.com/token \
            -d client_id="$C_ID" \
            -d client_secret="$C_SECRET" \
            -d refresh_token="$R_TOKEN" \
            -d grant_type=refresh_token)
          echo "$RESP" | grep -q access_token && echo "✅ access_token issued" || (echo "❌ token refresh failed"; echo "$RESP"; exit 1)
          ACCESS_TOKEN=$(echo "$RESP" | sed -n 's/.*"access_token":"\([^"]*\)".*/\1/p')
          echo "ACCESS_TOKEN_LEN=$(printf "%s" "$ACCESS_TOKEN" | wc -c)"
          echo "Listing blogs…"
          curl -s "https://www.googleapis.com/blogger/v3/users/self/blogs?access_token=$ACCESS_TOKEN" | head -c 1200; echo

      - name: Check BLOGGER_BLOG_ID matches
        env:
          BLOG_ID: ${{ secrets.BLOGGER_BLOG_ID }}
        run: |
          test -n "$BLOG_ID" || (echo "❌ BLOGGER_BLOG_ID is empty"; exit 1)
          echo "BLOGGER_BLOG_ID set (masked)."

      - name: Publish to Blogger
        if: env.BLOGGER_BLOG_ID != ''
        run: npm run publish:blogger
