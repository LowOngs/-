============================================================
[구현완료 항목 — 로컬 백업 상세 기록본]
프로젝트 루트: C:\google-blog\System_files  (로컬 개발 기준)
깃허브 루트:   <repo-root>/google-blog      (GitHub 웹 UI 기준)
============================================================


# ① Cloudflare R2 스토리지 개설 및 버킷 구성
- 계정/결제
  - 상태: 카드 등록 및 과금 플랜 활성화(무료 10GB/월 포함) 완료
  - 대시보드 경로(웹): Storage & Databases → R2 Object Storage → Overview

- 버킷 생성
  - 버킷명: ongs-blog-images   (1개)
  - 퍼블릭 개발 URL: 활성화(allow 입력) → 확인용 r2.dev 프리픽스 제공
  - S3 API → 액세스 키 발급(1세트)
    - Access Key ID: (보안)    # .env / Secrets에만 저장
    - Secret Access Key: (보안)

- 사용 키(값 자체는 비공개)
  - R2_ACCOUNT_ID
  - R2_ACCESS_KEY_ID
  - R2_SECRET_ACCESS_KEY
  - R2_BUCKET=ongs-blog-images
  - R2_ENDPOINT=https://<account-id>.r2.cloudflarestorage.com
  - CDN_BASE=https://pub-<hash>.r2.dev/ongs-blog-images

- 업로드 검증(최초 성공 사례)
  - 업로드된 오브젝트 경로(예): ongs-blog-images/images/2025/10/test_photo.jpg
  - 확인 위치: R2 → 특정 버킷 → Objects 탭


# ② 로컬 개발 환경 세팅
- OS/셸: Windows 10/11 + PowerShell
- Node/NPM:
  - node -v  → v24.x  (확인 완료)
  - npm  -v  → v11.x  (확인 완료)

- 프로젝트 디렉토리
  C:\google-blog\System_files\
    ├─ assets\images\                  # 로컬 이미지 소스
    ├─ content\posts\                  # 원천 포스트(JSON/MD)
    ├─ templates\post.html             # 렌더 템플릿 (1개 생성)
    ├─ scripts\
    │   ├─ build\
    │   │   ├─ r2-upload.js            # R2 업로드 스크립트 (1)
    │   │   └─ rewrite-images.js       # 이미지 경로 CDN 치환 (1)
    │   └─ publish\
    │       └─ blogger.js              # Blogger 발행 스크립트(자동 갱신 포함) (1)
    ├─ dist\posts\                     # 렌더 결과(생성물)
    ├─ ai\feed.ndjson                  # AIO 인용 피드(append 방식)
    ├─ package.json                    # NPM 스크립트/의존성 (1)
    ├─ package-lock.json               # (존재 시) (1)
    ├─ .env                            # 로컬 비밀키 파일(1)  ※ 커밋 금지
    ├─ .env.example                    # 공개 템플릿(1)
    └─ .gitignore                      # 커밋 제외 규칙(1)

- 파일 생성/수정(개수)
  - templates\post.html                            : 1
  - scripts\build\r2-upload.js                     : 1
  - scripts\build\rewrite-images.js                : 1
  - scripts\publish\blogger.js                     : 1 (자동 갱신 로직 포함판으로 교체 완료)
  - content\posts\sample_post.json                 : 1 (테스트용)
  - package.json / package-lock.json               : 1 / 1
  - .env / .env.example                            : 1 / 1
  - .gitignore                                     : 1

- .gitignore (핵심)
  .env
  .env.local
  node_modules/
  dist/

- .env.example (키 이름만 제공)
  R2_ACCOUNT_ID=
  R2_ACCESS_KEY_ID=
  R2_SECRET_ACCESS_KEY=
  R2_BUCKET=ongs-blog-images
  R2_ENDPOINT=
  CDN_BASE=
  IMAGES_DIR=assets/images
  POSTS_DIR=content/posts
  BLOGGER_BLOG_ID=
  GOOGLE_OAUTH_TOKEN=
  GOOGLE_CLIENT_ID=
  GOOGLE_CLIENT_SECRET=
  GOOGLE_REFRESH_TOKEN=


# ③ 이미지 파이프라인 동작 검증 (로컬 실행 로그 기준)
- 소스 이미지 배치: assets\images\test_photo.jpg (1개)
- 업로드 실행
  PS C:\google-blog\System_files> npm run images:upload
  → 성공 메시지(업로드 완료) 확인
- 치환 대상 포스트: content\posts\sample_post.json
  - 치환 전: "./assets/images/test_photo.jpg"
  - 치환 후: "https://pub-...r2.dev/ongs-blog-images/images/2025/10/test_photo.jpg"
- 치환 실행
  PS > npm run images:rewrite
  → ✔ sample_post.json — 2개 치환 / 이미지 경로 치환 완료: changed=2

- 결과 확인
  - sample_post.json 내부 경로가 CDN_BASE 프리픽스로 변환됨
  - 브라우저에서 변환 URL 직접 열람 가능(이미지 노출)


# ④ Google OAuth 및 Blogger 연결 준비
- OAuth Playground
  - API 범위: https://www.googleapis.com/auth/blogger
  - Access Token(1시간) + Refresh Token(장기) 발급
  - 테스트용 Access Token → 즉시 발행 테스트에 사용

- Google Cloud Console
  - 새 프로젝트 생성 → OAuth 동의 화면(External) 구성
  - OAuth 클라이언트 ID (Desktop App) 생성
    - GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET 확보
  - Playground에서 얻은 GOOGLE_REFRESH_TOKEN 보관

- 퍼블리셔 자동 갱신 로직 반영 (scripts\publish\blogger.js)
  - 우선순위: GOOGLE_OAUTH_TOKEN 사용
  - 401 등 만료 시 → refresh_token으로 즉시 재발급 후 1회 재시도
  - (처음부터 OAUTH_TOKEN 없어도 REFRESH_TOKEN으로 신규 발급해 진행)


# ⑤ GitHub 저장소 / Secrets / Actions 정비
- 위치 교정(중요)
  - (이전)   google-blog/System_files/.github/workflows/publish.yml   → 인식 안 됨
  - (현재)   google-blog/.github/workflows/publish.yml                → 인식됨(정답)

- 등록된 Repository Secrets (총 11개)
  1) BLOGGER_BLOG_ID
  2) GOOGLE_OAUTH_TOKEN
  3) GOOGLE_REFRESH_TOKEN
  4) GOOGLE_CLIENT_ID
  5) GOOGLE_CLIENT_SECRET
  6) R2_ACCOUNT_ID
  7) R2_ACCESS_KEY_ID
  8) R2_SECRET_ACCESS_KEY
  9) R2_BUCKET
  10) R2_ENDPOINT
  11) CDN_BASE

- 워크플로 파일 (1개)
  <repo-root>/google-blog/.github/workflows/publish.yml

  주요 섹션 요약:
  "on":
    workflow_dispatch:    # 수동 실행 허용
    push:
      branches: [ google-blog ]     # 실제 푸시 브랜치명과 일치
      paths:
        - content/posts/**
        - assets/images/**
        - templates/**
        - scripts/**
        - package.json
        - package-lock.json
  jobs:
    build-and-publish:
      runs-on: ubuntu-latest
      env:
        # R2/CDN + Blogger + Google OAuth(자동갱신)
      steps:
        - actions/checkout@v4
        - actions/setup-node@v4 (node 20)
        - npm ci (또는 npm install)
        - npm run images:upload
        - npm run images:rewrite
        - npm run posts:render
        - npm run publish:blogger

- 트리거 파서 이슈 해결 과정
  - `"on":` 로 감싸 YAML 파서 문제 해결
  - 스모크 워크플로(“trigger ok”)로 이벤트 인식 검증 성공
  - 이후 풀버전으로 되돌려 정상 실행 확인


# (참고) npm scripts — package.json (요지)
  "scripts": {
    "images:upload": "node scripts/build/r2-upload.js",
    "images:rewrite": "node scripts/build/rewrite-images.js",
    "posts:render": "node scripts/build/render-posts.js",
    "publish:blogger": "node scripts/publish/blogger.js"
  }

  - posts:render: templates\post.html 을 읽어 dist\posts\<slug>.html 생성
  - publish:blogger: dist\posts\*.html 을 Blogger API로 발행


# (참고) 템플릿 최소본 — templates\post.html (요지)
<!doctype html><html><head>
<meta charset="utf-8">
<title><!--TITLE--></title>
<meta name="description" content="<!--SUMMARY-->">
<!--UPDATED-->
<!--SCHEMA-->
</head><body>
<!--TLDR-->
<main><!--BODY--></main>
</body></html>


# (참고) 테스트 포스트 — content\posts\sample_post.json (예시)
{
  "title": "샘플 포스트",
  "slug": "sample-post",
  "summary": "요약 문장",
  "tldr": "핵심 세 줄.",
  "body": "<p>본문입니다.<br><img src=\"./assets/images/test_photo.jpg\" alt=\"테스트\"/></p>",
  "images": [
    {"src": "./assets/images/test_photo.jpg", "alt": "테스트 이미지"}
  ]
}


# 최종 메모
- 로컬 테스트: images:upload → images:rewrite → posts:render → (로컬 미리보기 OK)
- 깃허브 자동화: publish.yml 수동 Run 또는 push 트리거로 동일 루틴 수행
- Blogger 발행 시 로그 “✅ 발행 완료: <URL/ID>” 확인
- 모든 비밀키는 .env(로컬)/GitHub Secrets(원격)로만 보관 — 커밋 금지
