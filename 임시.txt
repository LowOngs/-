<!doctype html>
<html lang="ko">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Ongs · Partner Console – v11</title>

<style>
  :root{--fg:#111;--muted:#6b7280;--line:#e5e7eb;--brand:#0ea5e9;--ok:#16a34a;--warn:#f59e0b;--danger:#ef4444}
  html,body{margin:0;padding:0;background:#fff;color:var(--fg);font:14px/1.5 system-ui,Segoe UI,Apple SD Gothic Neo,Helvetica,Arial}
  .wrap{max-width:980px;margin:40px auto;padding:0 20px}
  header{display:flex;justify-content:space-between;align-items:end;margin-bottom:24px}
  header h1{margin:0;font-size:22px}
  header .ver{color:var(--muted);font-size:12px}
  section{padding:20px 0;border-top:1px solid var(--line)}
  section:first-of-type{border-top:0}
  .desc{margin:6px 0 16px;color:var(--muted)}
  .grid{display:grid;grid-template-columns:1fr 1.5fr auto;gap:10px;align-items:center}
  .grid > div{padding:8px 0;border-bottom:1px dashed var(--line)}
  .head{font-weight:700;color:#000}
  .pid{font-weight:600}
  .row.actions{display:flex;gap:6px;align-items:center}
  input[type="url"]{width:100%;box-sizing:border-box;padding:10px 12px;border:1px solid var(--line);border-radius:10px;font:inherit}
  .btn{appearance:none;border:0;border-radius:10px;padding:10px 12px;font-weight:700;cursor:pointer}
  .btn-apply{background:var(--brand);color:#fff}
  .btn-apply[disabled]{cursor:not-allowed}
  .btn-lock{background:#e5e7eb;color:#111}
  .btn-off-toggle{background:#10b981;color:#fff}      /* OFF 상태(비활성) → 버튼에 ON 표시 */
  .btn-off-toggle.on {background:#dc2626;color:#fff}  /* ON 상태(활성)   → 버튼에 OFF 표시 */
  .on{background:var(--ok)!important;color:#fff!important}
  .muted{color:var(--muted);font-size:12px}
  .statgrid{display:grid;grid-template-columns:repeat(4,1fr);gap:10px}
  .card{border:1px solid var(--line);border-radius:12px;padding:12px}
  .card h4{margin:0 0 8px 0;font-size:13px}
  .big{font-size:22px;font-weight:800}
  .err{ border-color:var(--danger) !important; background:#fff5f5; }
  .hint{ color:var(--muted); font-size:12px; margin-top:4px; }
  .btn-apply.locked{background:var(--danger)!important;color:#fff!important;opacity:1}
  .flex{display:flex;gap:10px;align-items:center;flex-wrap:wrap}
  .pill{border:1px solid var(--line);border-radius:999px;padding:6px 10px;font-size:12px;color:#555}
</style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>파트너 콘솔</h1>
      <div class="ver">v11 · lock mode / OFF=toggle</div>
    </header>

    <!-- 파트너 링크 관리 -->
    <section id="sec-urls">
      <h2>파트너 링크 관리</h2>
      <p class="desc">적용/잠금은 현상유지. <b>OFF 버튼은 토글</b>입니다. ON이면 활성(컬러·클릭 가능), OFF면 비활성(회색·클릭 불가). URL은 <b>https://</b>로 시작해야 저장됩니다.</p>
      <div class="grid" id="urlGrid">
        <div class="head">파트너</div>
        <div class="head">URL</div>
        <div class="head">동작</div>
      </div>
      <p class="muted">※ 서버 저장은 Script Properties 사용. ON&URL이 있어야 활성, OFF 또는 URL 없음이면 비활성.</p>
    </section>

    <!-- 집계 -->
    <section id="sec-stats">
      <h2>집계</h2>
      <div class="flex" style="margin-bottom:8px">
        <span class="pill" id="pill-month"></span>
        <span class="pill">TZ: Asia/Seoul</span>
        <span class="pill" id="pill-ref"></span>
      </div>
      <div class="statgrid" id="statGrid"></div>
      <p class="muted" id="statsHint" style="margin-top:8px"></p>
    </section>
  </div>

<script>
  const PARTNERS = [
    ['amazon','Amazon'],['ebay','eBay'],['target','Target'],['mercadolibre','Mercado Libre'],
    ['flipkart','Flipkart'],['amazon_in','Amazon India'],['shopee','Shopee'],['lazada','Lazada'],
    ['aliexpress','AliExpress'],['otto','Otto'],['zalando','Zalando'],['allegro','Allegro']
  ];
  const URL_RE = /^https?:\/\/\S+$/i;
  const $ = s => document.querySelector(s);
  const h = (t,props={}) => Object.assign(document.createElement(t),props);

  // ----- UI -----
  function drawStateGrid(stateMap = {}) {
    const wrap = $('#urlGrid');
    wrap.querySelectorAll('.row').forEach(el=>el.remove());

PARTNERS.forEach(([pid,name])=>{
      const cur = stateMap[pid] || {url:'', on:false};
      const nameDiv = h('div',{className:'pid row',textContent:name});
      const boxDiv  = h('div',{className:'row'});
      const actDiv  = h('div',{className:'row actions'});

      const inp = h('input',{type:'url', id:'url_'+pid, value:cur.url||'', placeholder:'https://… (tracking link)'});
      inp.dataset.last = cur.url || '';

      const btnApply  = h('button',{className:'btn btn-apply', textContent:'적용'});
      const btnLock   = h('button',{className:'btn btn-lock',  textContent:'잠금'});
      const btnOffTgl = h('button',{className:'btn btn-off-toggle', textContent:''});

      // 잠금: 현상유지 (Apply만 막음)
      let locked = false;
      function setLocked(state){
        locked = !!state;
        if (locked){
          btnApply.classList.add('locked');
          btnApply.disabled = true;
          btnLock.textContent = '해제';
          btnLock.setAttribute('aria-pressed','true');
        }else{
          btnApply.classList.remove('locked');
          btnApply.disabled = false;
          btnLock.textContent = '잠금';
          btnLock.removeAttribute('aria-pressed');
        }
      }
      btnLock.addEventListener('click', ()=> setLocked(!locked) );

      // OFF 토글 표시/문구
      function paintOffButton(isOn){
        // isOn=true(활성) → 버튼은 'OFF' (끄는 동작), 빨강
        // isOn=false(비활성) → 버튼은 'ON' (켜는 동작), 초록
        btnOffTgl.textContent = isOn ? 'OFF' : 'ON';
        btnOffTgl.classList.toggle('on', !!isOn);
      }
      paintOffButton(!!cur.on);

      // OFF 토글 동작
      btnOffTgl.addEventListener('click', ()=>{
        const nextOn = !cur.on;
        // ON으로 켤 때 URL이 없으면 금지
        if (nextOn && !(inp.dataset.last||'').trim()){
          alert('URL이 비어 있습니다. 먼저 "적용"으로 URL을 저장한 뒤 ON으로 전환하세요.');
          return;
        }
        btnOffTgl.disabled = true;
        google.script.run.withSuccessHandler(res=>{
          cur.on = !!res.on;
          paintOffButton(cur.on);
          btnOffTgl.disabled = false;
        }).withFailureHandler(err=>{
          alert('상태 변경 실패: ' + (err && err.message || err));
          btnOffTgl.disabled = false;
        }).setPartnerOn(pid, nextOn);
      });

      // 적용 (URL 저장)
      btnApply.addEventListener('click', ()=>{
        if (locked) return;
        const val = (inp.value||'').trim();
        if (!val){ inp.classList.add('err'); alert('값이 없습니다. https:// 로 시작하는 전체 URL을 입력하세요.'); return; }
        if (!URL_RE.test(val)){ inp.classList.add('err'); alert('잘못된 입력입니다. https:// 로 시작하는 전체 URL을 입력해 주세요.'); return; }

        btnApply.disabled = true; btnApply.textContent = '저장중…';
        google.script.run.withSuccessHandler(res=>{
          inp.dataset.last = res.url || '';
          inp.classList.remove('err');
          btnApply.textContent = '적용됨';
          btnApply.classList.add('on');
          setTimeout(()=>{ btnApply.textContent='적용'; btnApply.disabled=locked; }, 700);
        }).withFailureHandler(err=>{
          alert('저장 실패: ' + (err && err.message || err));
          btnApply.textContent='적용'; btnApply.disabled=locked;
        }).setPartnerUrl(pid, val);
      });

      inp.addEventListener('input', ()=>{ inp.classList.remove('err'); updateApplyState(btnApply, inp); });

      // DOM
      wrap.appendChild(nameDiv);
      wrap.appendChild(boxDiv); boxDiv.appendChild(inp);
      wrap.appendChild(actDiv); actDiv.appendChild(btnApply); actDiv.appendChild(btnLock); actDiv.appendChild(btnOffTgl);

      updateApplyState(btnApply, inp);
    });
  }

  function updateApplyState(btnApply, inp){
    btnApply.classList.toggle('on', !!inp.dataset.last && inp.value.trim() === inp.dataset.last);
  }

  // ----- 집계 -----
  function drawStats(data){
    const stat = $('#statGrid'); stat.innerHTML='';

const month = data.yyyymm || '----';
    $('#pill-month').textContent = 'Month: ' + month;
    $('#pill-ref').textContent   = 'Ref: cmd=go&pid={1..12|name}';
    const counts = data.counts || {};
    PARTNERS.forEach(([pid,name])=>{
      const card = h('div',{className:'card'});
      card.appendChild(h('h4',{textContent:name}));
      card.appendChild(h('div',{className:'big',textContent:String(counts[pid]||0)}));
      stat.appendChild(card);
    });
    $('#statsHint').textContent = '푸터 버튼은 Web App URL에 cmd=go&pid=… 로 연결되며, 클릭 시 월별 카운터가 자동 증가합니다.';
  }

  // ----- 시작 -----
  function init(){
    // URL+ON 상태 한꺼번에 로드
    google.script.run.withSuccessHandler(drawStateGrid)
      .withFailureHandler(()=>drawStateGrid({}))
      .getPartnerState();

    // 집계 로드(있는 경우)
    google.script.run.withSuccessHandler(drawStats)
      .withFailureHandler(()=>drawStats({yyyymm:'----',counts:{}}))
      .getMonthlyStatsRPC && google.script.run.getMonthlyStatsRPC(); // 함수 없으면 무시
  }
  init();
</script>
</body>
</html>
