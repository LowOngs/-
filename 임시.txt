<!doctype html>
<html lang="ko">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Ongs · Partner Console – v11.3</title>

<!-- 캐시 무력화 -->
<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="0"/>

<style>
  :root{--fg:#111;--muted:#6b7280;--line:#e5e7eb;--brand:#2563eb;--ok:#16a34a;--danger:#ef4444}
  html,body{margin:0;padding:0;background:#fff;color:var(--fg);font:14px/1.5 system-ui,Segoe UI,Apple SD Gothic Neo,Helvetica,Arial}
  .wrap{max-width:980px;margin:40px auto;padding:0 20px}
  header{display:flex;justify-content:space-between;align-items:end;margin-bottom:24px}
  header h1{margin:0;font-size:22px}
  header .ver{color:var(--muted);font-size:12px}
  section{padding:20px 0;border-top:1px solid var(--line)}
  section:first-of-type{border-top:0}
  .desc{margin:6px 0 16px;color:var(--muted)}
  .grid{display:grid;grid-template-columns:1fr 1.5fr auto;gap:10px;align-items:center}
  .grid > div{padding:8px 0;border-bottom:1px dashed var(--line)}
  .head{font-weight:700;color:#000}
  .pid{font-weight:600}
  .row.actions{display:flex;gap:6px;align-items:center}
  input[type="url"]{width:100%;box-sizing:border-box;padding:10px 12px;border:1px solid var(--line);border-radius:10px;font:inherit}
  .btn{appearance:none;border:0;border-radius:10px;padding:10px 12px;font-weight:700;cursor:pointer}
  /* 적용(파란) */
  .btn-apply{background:var(--brand);color:#fff}
  .btn-apply[disabled]{cursor:not-allowed}
  /* 잠금 토글 / 잠금 시 적용은 빨강 처리 */
  .btn-lock{background:#e5e7eb;color:#111}
  .btn-apply.locked{background:var(--danger)!important;color:#fff!important;opacity:1}

  /* ON/OFF 현재상태 표시 버튼 */
  .btn-onoff{appearance:none;border:0;border-radius:10px;padding:10px 12px;font-weight:700;cursor:pointer}
  .btn-onoff.is-on  {background:var(--ok);color:#fff}      /* 현재 ON → 초록, 텍스트 'ON' */
  .btn-onoff.is-off {background:var(--danger);color:#fff}  /* 현재 OFF → 빨강, 텍스트 'OFF' */

  .muted{color:var(--muted);font-size:12px}
  .statgrid{display:grid;grid-template-columns:repeat(4,1fr);gap:10px}
  .card{border:1px solid var(--line);border-radius:12px;padding:12px}
  .card h4{margin:0 0 8px 0;font-size:13px}
  .big{font-size:22px;font-weight:800}
  .err{border-color:var(--danger)!important;background:#fff5f5}
  .flex{display:flex;gap:10px;align-items:center;flex-wrap:wrap}
  .pill{border:1px solid var(--line);border-radius:999px;padding:6px 10px;font-size:12px;color:#555}
</style>
</head>

<body>
<div class="wrap">
  <header>
    <h1>파트너 콘솔</h1>
    <div class="ver" id="ver">v11.3</div>
  </header>

  <section id="sec-urls">
    <h2>파트너 링크 관리</h2>
    <p class="desc">
      • <b>적용</b>: http(s):// 로 시작하는 정상 URL만 저장 (파란 버튼)<br/>
      • <b>잠금</b>: ‘적용’ 실수 방지. 잠금 시 적용 버튼이 <b>빨간색</b>으로 바뀌고 비활성<br/>
      • <b>ON/OFF</b>: 기본 ON(초록 ‘ON’ 표기). OFF 전환은 URL이 비어 있어야 가능.
    </p>
    <div class="grid" id="urlGrid">
      <div class="head">파트너</div>
      <div class="head">URL</div>
      <div class="head">동작</div>
    </div>
    <p class="muted">푸터 동작: ON+URL=컬러·클릭 / ON만=컬러·비클릭 / OFF=회색·비클릭</p>
  </section>

  <section id="sec-stats">
    <h2>집계</h2>
    <div class="flex" style="margin-bottom:8px">
      <span class="pill" id="pill-month"></span>
      <span class="pill">TZ: Asia/Seoul</span>
      <span class="pill" id="pill-ref"></span>
    </div>
    <div class="statgrid" id="statGrid"></div>
    <p class="muted" id="statsHint" style="margin-top:8px"></p>
  </section>
</div>

<script>
  // 버전 타임스탬프(캐시 확인용)
  (function(){ var v=document.getElementById('ver'); if(v) v.textContent='v11.3 · '+new Date().toISOString(); })();

  const PARTNERS = [
    ['amazon','Amazon'],['ebay','eBay'],['target','Target'],['mercadolibre','Mercado Libre'],
    ['flipkart','Flipkart'],['amazon_in','Amazon India'],['shopee','Shopee'],['lazada','Lazada'],
    ['aliexpress','AliExpress'],['otto','Otto'],['zalando','Zalando'],['allegro','Allegro']
  ];
  const URL_RE = /^https?:\/\/\S+$/i;
  const $ = s => document.querySelector(s);
  const h = (t,props={}) => Object.assign(document.createElement(t),props);

  function drawStateGrid(stateMap = {}) {
    const wrap = $('#urlGrid');
    wrap.querySelectorAll('.row').forEach(el=>el.remove());

    PARTNERS.forEach(([pid,name])=>{
      // 서버 기본 on == true 반영
      const cur = stateMap[pid] || {url:'', on:true};

      const nameDiv = h('div',{className:'pid row',textContent:name});
      const boxDiv  = h('div',{className:'row'});
      const actDiv  = h('div',{className:'row actions'});

      const inp = h('input',{type:'url', id:'url_'+pid, value:cur.url||'', placeholder:'https://… (tracking link)'});
      inp.dataset.last = cur.url || '';

      const btnApply  = h('button',{className:'btn btn-apply', textContent:'적용'});
      const btnLock   = h('button',{className:'btn btn-lock',  textContent:'잠금'});
      const btnOnOff  = h('button',{className:'btn btn-onoff', textContent:''});

      // 잠금 토글
      let locked = false;
      function setLocked(state){
        locked = !!state;
        if (locked){
          btnApply.classList.add('locked');
          btnApply.disabled = true;
          btnLock.textContent = '해제';
          btnLock.setAttribute('aria-pressed','true');
        }else{
          btnApply.classList.remove('locked');
          btnApply.disabled = false;
          btnLock.textContent = '잠금';
          btnLock.removeAttribute('aria-pressed');
        }
      }
      btnLock.addEventListener('click', ()=> setLocked(!locked) );

      // ON/OFF 현재 상태 표시(요구: 현재 상태 그대로 표기)
      function paintOnOff(isOn){
        btnOnOff.classList.toggle('is-on',  !!isOn);
        btnOnOff.classList.toggle('is-off', !isOn);
        btnOnOff.textContent = isOn ? 'ON' : 'OFF';
        btnOnOff.setAttribute('aria-pressed', isOn ? 'true' : 'false');
      }
      paintOnOff(!!cur.on);

      // ON/OFF 토글(OFF 전환은 URL 비어 있어야 허용)
      btnOnOff.addEventListener('click', ()=>{
        const nextOn = !cur.on;

        // OFF로 내릴 때 선검사: 입력값/저장값 모두 비어있어야 함
        if (!nextOn){
          const haveLive  = !!(inp.value||'').trim();
          const haveSaved = !!(inp.dataset.last||'').trim();
          if (haveLive || haveSaved){
            alert('트래킹 링크가 존재합니다. 먼저 URL을 비우고 "적용"으로 저장한 뒤 OFF로 전환하세요.');
            return;
          }
        }

        btnOnOff.disabled = true;
        google.script.run
          .withSuccessHandler(res=>{
            // 서버가 최신 상태를 돌려주면 전체 다시 그려 동기화
            drawStateGrid(res.state || {});
          })
          .withFailureHandler(err=>{
            alert((err && err.message) || '상태 변경 실패');
            btnOnOff.disabled = false;
          })
          .setPartnerOn(pid, nextOn);
      });

      // URL 적용(검증: http/https)
      btnApply.addEventListener('click', ()=>{
        if (locked) return;
        const val = (inp.value||'').trim();
        if (!val){ inp.classList.add('err'); alert('값이 없습니다. http(s):// 로 시작하는 전체 URL을 입력하세요.'); return; }
        if (!URL_RE.test(val)){ inp.classList.add('err'); alert('잘못된 주소값 입니다. http(s):// 로 시작하는 전체 URL을 입력해 주세요.'); return; }

        btnApply.disabled = true; btnApply.textContent = '저장중…';
        google.script.run
          .withSuccessHandler(res=>{
            inp.dataset.last = res.url || '';
            inp.classList.remove('err');
            btnApply.textContent = '적용됨';
            setTimeout(()=>{ btnApply.textContent='적용'; btnApply.disabled=locked; }, 700);
          })
          .withFailureHandler(err=>{
            alert('저장 실패: ' + ((err && err.message) || err));
            btnApply.textContent='적용'; btnApply.disabled=locked;
          })
          .setPartnerUrl(pid, val);
      });

      // 입력 변경 시 표시 리셋
      inp.addEventListener('input', ()=>{ inp.classList.remove('err'); });

      // DOM 조립
      wrap.appendChild(nameDiv);
      wrap.appendChild(boxDiv); boxDiv.appendChild(inp);
      wrap.appendChild(actDiv); actDiv.appendChild(btnApply); actDiv.appendChild(btnLock); actDiv.appendChild(btnOnOff);
    });
  }

  // 집계(있으면 표시)
  function drawStats(data){
    const stat = document.querySelector('#statGrid'); stat.innerHTML='';
    const month = data.yyyymm || '----';
    document.querySelector('#pill-month').textContent = 'Month: ' + month;
    document.querySelector('#pill-ref').textContent   = 'Ref: cmd=go&pid={1..12|name}';
    const counts = data.counts || {};
    PARTNERS.forEach(([pid,name])=>{
      const card = h('div',{className:'card'});
      card.appendChild(h('h4',{textContent:name}));
      card.appendChild(h('div',{className:'big',textContent:String(counts[pid]||0)}));
      stat.appendChild(card);
    });
    document.querySelector('#statsHint').textContent = '푸터 버튼은 Web App URL에 cmd=go&pid=… 로 연결되며, 클릭 시 월별 카운터가 자동 증가합니다.';
  }

  function init(){
    google.script.run
      .withSuccessHandler(drawStateGrid)
      .withFailureHandler(()=>drawStateGrid({}))
      .getPartnerState();

    // 집계는 선택사항(없으면 기본값 렌더)
    if (google.script.run.getMonthlyStatsRPC){
      google.script.run
        .withSuccessHandler(drawStats)
        .withFailureHandler(()=>drawStats({yyyymm:'----',counts:{}}))
        .getMonthlyStatsRPC();
    } else {
      drawStats({yyyymm:'----',counts:{}});
    }
  }
  init();
</script>
</body>
</html>
